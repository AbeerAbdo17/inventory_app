 public void Savevoucherfull2(int dr, int cr, double amount) {
    Connection con = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    ResultSet rs = null;

    try {
        con = Connect.ConnectDB();
        con.setAutoCommit(false);

        // Get next voucher number
        int Voucher = 0;
        String sql1 = "SELECT MAX(topno) FROM yeartopno WHERE sysyear = ?";
        pst = con.prepareStatement(sql1);
        pst.setInt(1, Frmlogin1.sysYear);
        rs = pst.executeQuery();
        if (rs.next()) {
            Voucher = rs.getInt(1) + 1;
        }
        pst.close();
        rs.close();

        // Insert journal entries
        String sql2 = "INSERT INTO journal(journal_no, journal_date, journal_submain_no, journal_dr, journal_cr, journal_desc, journal_user, journal_docno) " +
                      "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        pst = con.prepareStatement(sql2);

        String dateStr = new java.sql.Date(System.currentTimeMillis()).toString(); // Or get from UI

        // Debit Entry
        pst.setInt(1, Voucher);
        pst.setString(2, dateStr);
        pst.setInt(3, cr);
        pst.setDouble(4, 0);
        pst.setDouble(5, roundNo(amount, 2));
        pst.setString(6, ""); // Description
        pst.setString(7, "user"); // Logged in user
        pst.setString(8, "1"); // Doc No
      //  pst.setString(9, ""); // Invoice No
        pst.addBatch();

        // Credit Entry
        pst.setInt(1, Voucher);
        pst.setString(2, dateStr);
        pst.setInt(3, dr);
        pst.setDouble(4, roundNo(amount, 2));
        pst.setDouble(5, 0);
        pst.setString(6, "");
        pst.setString(7, "user");
        pst.setString(8, "1");
   //     pst.setString(9, "");
        pst.addBatch();

        // Insert into yeartopno
        String sql3 = "INSERT INTO yeartopno (topno, sysyear) VALUES (?, ?)";
        pst1 = con.prepareStatement(sql3);
        pst1.setInt(1, Voucher);
        pst1.setInt(2, Frmlogin1.sysYear);
        pst1.addBatch();

        // Execute batches
        pst.executeBatch();
        pst1.executeBatch();

        // Commit
        con.commit();

    } catch (SQLException ex) {
        System.err.println("Error: " + ex.getMessage());
        try {
            if (con != null) con.rollback();
        } catch (SQLException e) {
            System.err.println("Rollback error: " + e.getMessage());
        }
    } finally {
        try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            if (pst1 != null) pst1.close();
            if (con != null) {
                con.setAutoCommit(true);
                con.close();
            }
        } catch (SQLException e) {
            System.err.println("Cleanup error: " + e.getMessage());
        }
    }
}